class Solution {
    static class Pair implements Comparable<Pair>{
        int val;
        int freq;
        Pair(int val,int freq){
            this.val=val;
            this.freq=freq;
        }
        public int compareTo(Pair o){
            if(this.freq!=o.freq){
                return o.freq-this.freq;
            }
            return o.val-this.val;
        }
    }
    public int[] topK(int[] nums, int k) {
        // Code here
        int[] ans=new int[k];
        HashMap<Integer,Integer> hm=new HashMap<>();
        for(int val:nums){
            hm.put(val,hm.getOrDefault(val,0)+1);
        }
        PriorityQueue<Pair> pq=new PriorityQueue<>();
        for(int val:hm.keySet()){
            int freq=hm.get(val);
            
            pq.add(new Pair(val,freq));
        }
        int idx=0;
        while(idx<k){
            Pair rPair=pq.remove();
            int rval=rPair.val;
            ans[idx++]=rval;
        }
        return ans;
    }
}