class Solution
{
    //Function to find the maximum profit and the number of jobs done.
      public static class Pair implements Comparator<Job>{
        public int compare(Job obj1,Job obj2){
            if(obj1.profit!=obj2.profit){
                return obj2.profit-obj1.profit;
            }
            return obj2.deadline-obj1.deadline;
        }
    }
    int[] JobScheduling(Job arr[], int n)
    {
        // Your code here
        Arrays.sort(arr,new Pair());
        int maxDeadLine=0;
        for(int i=0;i<n;i++){
            maxDeadLine=Math.max(arr[i].deadline,maxDeadLine);
        }
        
        int maxProfit=0;
        int jobsAllocated=0;
        boolean[] slots=new boolean[maxDeadLine];
        for(int i=0;i<n;i++){
            for(int j=arr[i].deadline-1;j>=0;j--){
                if(slots[j]==false){
                    slots[j]=true;
                    jobsAllocated++;
                    maxProfit+=arr[i].profit;
                    break;
                }
            }
        }
        return new int[]{jobsAllocated,maxProfit};
    }
}