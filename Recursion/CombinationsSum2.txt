class Solution {
     List<List<Integer>> ans=new ArrayList<>();
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        ans=new ArrayList<>();
        Arrays.sort(candidates);
        helper(candidates,0,new ArrayList<>(),target);
        return ans;
    }
    public void helper(int[] arr,int idx,List<Integer> list,int target){
     if(target==0){
         ans.add(new ArrayList<>(list));
     }
        if(target<0){
            return;
        }
        
        for(int i=idx;i<arr.length;i++){
            if(i>idx && arr[i]==arr[i-1]){
                continue;
            }
            if(arr[i]>target){
                return;
            }
            list.add(arr[i]);
            helper(arr,i+1,list,target-arr[i]);
            list.remove(list.size()-1);
        }
    }
}