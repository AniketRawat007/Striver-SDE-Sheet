class Solution {
    char[][] ans=new char[9][9]; // after successfully putting all the values in board changes need to be preserved
    int count=0;
    public void display(char[][] board){
       
           for(int i=0;i<board.length;i++){
               for(int j=0;j<board.length;j++){
                   System.out.print(board[i][j]);
               }
               System.out.println();
           }

}

    public void solveSudoku(char[][] board) {
        if(board == null || board.length == 0){
            return;
        }
        sudokuHelper(board,0,0);
         for(int i=0;i<board.length;i++){
             for(int j=0;j<board.length;j++){
                 board[i][j]=ans[i][j];
             }
         }
    }
    public void sudokuHelper(char[][] board,int row,int col){
    if(row==board.length){
        if(count==0){
         for(int i=0;i<board.length;i++){
             for(int j=0;j<board.length;j++){
                 ans[i][j]=board[i][j];
             }
         }
            count++;
        }
        return;
        }
        int nr=0;
        int nc=0;
        if(col==board[0].length-1){
            nr=row+1;
            nc=0;
        }
        else{
            nr=row;
            nc=col+1;
        }
         
        if(board[row][col]!='.'){
            sudokuHelper(board,nr,nc);
        }
        else{
            for(char val='1';val<='9';val++){
                if(isValid(board,row,col,val)){
                    board[row][col]=val;
                    sudokuHelper(board,nr,nc);
                    board[row][col]='.';
                }
            }
        }
    }
    public boolean isValid(char[][] board,int row,int col,char val){
        
        for(int i=0;i<board.length;i++){
            if(board[i][col]==val){
                return false;
            }
        }
        for(int j=0;j<board.length;j++){
            if(board[row][j]==val){
                return false;
            }
        }
        
        row=row/3*3;
        col=col/3*3;
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
             if(board[row+i][j+col]==val){
                 return false;
             }   
            }  
        }
        return true;
    }
}
